// This is your Prisma schema file for the Order service

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id                    String      @id @default(uuid())
  vendorId              String      // The ID of the user (vendor) who placed the order
  totalPrice            Float
  status                OrderStatus @default(PENDING)
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
  orderItems            OrderItem[]

  // --- NEW FIELDS for Metrics, ML, and Logistics ---
  supplierId            String      // Crucial link to the supplier being ordered from
  deliveryTime          DateTime?   // The actual time of delivery (optional)
  estimatedDeliveryTime DateTime?   // The promised delivery time (optional)
  vendorLocationLat     Float       // Denormalized vendor latitude at time of order
  vendorLocationLon     Float       // Denormalized vendor longitude at time of order
  weatherAtOrder        Json        // Stores weather snapshot (e.g., { "temp": 28, "rain": false })
  cancellationReason    String?     // Optional reason for cancellation
}

model OrderItem {
  id            String @id @default(uuid())
  orderId       String
  productId     String // The ID of the product from the Product service
  quantity      Int
  price         Float  // The price of the product at the time of order
  order         Order  @relation(fields: [orderId], references: [id])

  // --- NEW FIELD for Metrics ---
  unitOfMeasure String // Saves the unit, e.g., 'kg', 'pack'
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}