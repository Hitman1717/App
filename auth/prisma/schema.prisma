generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model remains mostly the same
model User {
  id              String            @id @default(uuid())
  email           String            @unique
  passwordHash    String
  role            Role
  isVerified      Boolean           @default(false)
  reputationScore Float             @default(3.0) // Start with a neutral score
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  vendorProfile   VendorProfile?
  supplierProfile SupplierProfile?
}

// VendorProfile gets the new ML and search fields
model VendorProfile {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @unique
  firstName   String
  lastName    String
  address     String
  pincode     String
  phoneNumber String
  // --- NEW FIELDS ---
  latitude    Float? // Optional for now
  longitude   Float? // Optional for now
  foodType    String?  // e.g., 'Momos', 'Chaat', 'Biryani'
  operatingHours Json?   // e.g., { "monday": "9am-5pm", "tuesday": "9am-5pm" }
}

// SupplierProfile gets new logistics and search fields
model SupplierProfile {
  id                String   @id @default(uuid())
  user              User     @relation(fields: [userId], references: [id])
  userId            String   @unique
  companyName       String
  warehouseAddress  String
  pincode           String
  contactPerson     String
  gstId             String   @unique
  // --- NEW FIELDS ---
  latitude          Float?
  longitude         Float?
  deliveryVehicles  String[] // e.g., ["Truck", "Bike"]
  minOrderValue     Float    @default(0)
}

enum Role {
  SUPPLIER
  VENDOR
  ADMIN
}